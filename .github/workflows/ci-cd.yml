name: CI/CD Pipeline for PedidoApi

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ master ]
  push:
    branches: [master]


jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
    
      - name: Restore dependencies
        run: dotnet restore
      
      - name: Build with .NET
        run: dotnet build PedidoApi.sln --no-restore  
  
  docker_build_and_push:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Set image tag
        id: vars
        run: echo "IMAGE_TAG=${{ github.run_number }}" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/pedidosapp:${{ env.IMAGE_TAG }} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/pedidosapp:${{ env.IMAGE_TAG }} ${{ secrets.DOCKER_USERNAME }}/pedidosapp:latest

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/pedidosapp:${{ env.IMAGE_TAG }}
          docker push ${{ secrets.DOCKER_USERNAME }}/pedidosapp:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker_build_and_push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Helm
        uses: azure/setup-helm@v4
      - name: Deploy to Kubernetes
        run: |
          printf "%s" "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
          kubectl config use-context aks-cluster-pedidos --kubeconfig=/tmp/kubeconfig
          helm upgrade pedidoapi helm/pedidoapi \
            --install \
            --set image.repository=${{ secrets.DOCKER_USERNAME }}/pedidosapp \
            --set image.tag=${{ env.IMAGE_TAG }} \
            --namespace default


